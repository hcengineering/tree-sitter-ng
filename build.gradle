
import org.treesitter.build.GenTask

plugins {
    alias(libs.plugins.download)
    id 'base'
}

allprojects {
    group = 'io.github.bonede'
    repositories {
        mavenCentral()
    }
}


subprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral()
    }

    dependencies {
        testImplementation platform(libs.junit.bom)
        testImplementation 'org.junit.jupiter:junit-jupiter'
        if(project.name != 'tree-sitter'){
            testImplementation project(":tree-sitter-tests")
            implementation project(":tree-sitter")
        }
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    test {
        useJUnitPlatform()
    }

    tasks.register('downloadSource', DownloadSourceTask)

    tasks.register('buildNative', BuildNativeTask) {
        zigExe = rootProject.downloadZig.zigExe
        dependsOn downloadSource, rootProject.downloadZig
    }

    tasks.withType(Javadoc) {
        options.locale = 'en_US'
        options.JFlags = ["-Duser.language=en_US"]
    }
}


tasks.register('downloadMiniSign', DownloadMiniSignTask)

tasks.register('downloadZig', DownloadZigTask){
    miniSignExe = downloadMiniSign.miniSignExe
    dependsOn downloadMiniSign
}

tasks.register("gen", GenTask) {
    group = "build setup"
    description = "Generate sub project for tree sitter parser"
}
